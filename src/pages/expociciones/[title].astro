---
// views
import Layout from '../../layouts/Vertical.astro'
import Header from '../../components/header/Header.astro'
import Main from '../../components/shared/main/Main.astro'
import Submenu from '../../components/shared/heading/Submenu.astro'
import { Swiper } from '../../components/shared/swiper/Swiper'
import Footer from '../../components/shared/footer/Footer.astro'

// data api
const { title } = Astro.params
import { API_URL, ProductProps } from '../../constants'
const url = `${API_URL}/api/products`
const product = await fetch(url)
const data = await product.json()

const page: ProductProps = data.find(
  (data: ProductProps) => String(data.title) === title
)
if (!page) return Astro.redirect('/404')

const {
  title: titleProduct,
  body,
  category,
  images,
  tags,
  createdAt,
  slug
} = page

// format
const date = new Date(createdAt)
const dateFormated = date.toLocaleDateString('en-CO', {
  day: 'numeric',
  month: 'short',
  year: 'numeric'
})
---

<Layout title={`Isarte · Galería · ${titleProduct}`}>
  <Header />
  <Main>
    <Submenu page={titleProduct} />
    <div class="grid container">
      <div class="content-img">
        <Swiper images={images} client:load />
      </div>

      <div class="content-text">
        <h1>{title}</h1>
        <div class="description">
          <Fragment set:html={body} />
        </div>

        <p class="sub">Categoria: <span>{category}</span></p>
        <p class="sub">
          Fecha: <span>{dateFormated}</span>
        </p>
        <a
          href={`https://tienda.isabelrengifo.art/products/${slug}`}
          class="shop notation-shop"
          target="_blank">Comprar Ahora</a
        >
      </div>
    </div>

    <!-- <div class="menu-bottom container">
      <a href="#" class="notation">Anterior</a>
      <a href="/">X</a>
      <a href="#" class="notation">Siguiente</a>
    </div> -->
  </Main>
  <Footer />
</Layout>

<style>
  .grid {
    display: grid;
    gap: 8rem;
    justify-content: center;
    margin: 0 auto 8rem;
    align-items: start;
    padding: 4rem 0 0;
  }

  .content-img {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .content-img img {
    width: 100%;
    height: 100%;
    aspect-ratio: 16/9;
    object-fit: cover;
  }

  .content-text {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    color: var(--black);
    padding: 0 2rem;
  }

  .content-text h1 {
    font-family: var(--font-primary);
    text-transform: uppercase;
    font-size: var(--font-lg);
    margin-bottom: 2rem;
    word-wrap: break-word;
    white-space: normal;
  }

  .content-text p,
  .description {
    font-size: var(--font-base);
    font-family: var(--font-body);
  }

  .description {
    margin-bottom: 3rem;
  }

  .sub {
    font-family: var(--font-primary) !important;
    text-transform: uppercase;
    margin-bottom: 1rem;
  }

  .shop {
    margin-top: 2rem;
    text-transform: uppercase;
    font-family: var(--font-primary);
    color: var(--black);
    text-decoration: none;
    padding: 1rem 2rem;
    z-index: 2;
  }

  .content-text p span {
    font-family: var(--font-body);
    text-transform: none;
  }

  .menu-bottom {
    display: flex;
    justify-content: space-between;
  }

  .menu-bottom a {
    font-family: var(--font-primary);
    color: var(--black);
    text-decoration: none;
    margin: 3rem 0 6rem;
  }

  @media (min-width: 1024px) {
    .grid {
      grid-template-columns: 1fr 400px;
      padding: 12rem 0;
      margin: 0 auto 0;
    }

    .menu-bottom a {
      margin: 0 0 8rem;
    }

    .content-text {
      padding: 0;
    }

    .content-img {
      min-height: 500px;
    }
  }
</style>

<script>
  // notation
  import { annotate } from 'rough-notation'

  globalThis.document.querySelectorAll('.notation').forEach(el => {
    annotate(el, {
      type: 'underline',
      color: '#f9d71c',
      strokeWidth: 4
    }).show()
  })

  globalThis.document.querySelectorAll('.notation-shop').forEach(el => {
    annotate(el, {
      type: 'box',
      color: '#f9d71c',
      strokeWidth: 4
    }).show()
  })
</script>
